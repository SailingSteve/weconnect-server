/// An ordered series of steps to accomplish an onboarding goal
model PersonProcess {
  id           Int      @id @default(autoincrement())
  processName  String
  description  String?
  /// To be completed based on team(s) the volunteer is in
  isForTeam    Boolean?
  /// This is a process that is in use
  statusActive Boolean  @default(false)
  teams        Team[]
}

/// How is one ProcessStep related to prior steps?
model ProcessDependencies {
  id                    Int     @id @default(autoincrement())
  isBlockedBy           Boolean @default(false)
  dependencyName        String?
  previousProcessStepId Int
  processStepId         Int
}

/// One step in a PersonProcess
model ProcessStep {
  id                          Int      @id @default(autoincrement())
  /// Needed for Google Drive API
  googleDriveFolderId         String?
  isGoogleDrivePermissionStep Boolean?
  /// What step is this in the process
  order                       Int      @default(0)
  /// Id of the process this step is a part of
  processId                   Int
  /// Where HR team goes to do this step, could be Google drive folder
  stepActionUrl               String?
  stepName                    String
  stepDescription             String?
  stepInstructions            String?
}

/// The status of one step in an onboarding process, for one person
model ProcessStepStatus {
  dateLastUpdated        DateTime @default(now()) @updatedAt
  /// The HR team member triggering the completion of the step
  doneByPersonId         Int?
  googleDriveSuccess     Boolean?
  /// Id of the person being taking through this process
  personIdBeingOnboarded Int
  /// Id of the ProcessStep
  processStepId          Int
  /// Id of the process this step is a part of
  processId              Int
  statusDone             Boolean  @default(false)
  statusError            Boolean?
  /// If there was an issue, it has been resolved
  statusErrorResolved    Boolean?
  statusResolvedComment  String?
  statusToDoByHuman      Boolean?

  @@id(name: "processStepIdPersonId", [processStepId, personIdBeingOnboarded])
}

///
model ProcessStepChangeLog {
  id                     Int      @id @default(autoincrement())
  changeDescription      String
  dateCreated            DateTime @default(now())
  dateLastUpdated        DateTime @default(now()) @updatedAt
  /// The HR team member triggering the completion of the step
  doneByPersonId         Int?
  /// Id of the person this log entry is related to
  personIdBeingOnboarded Int
  processId              Int
  /// Id of the ProcessStep
  processStepId          Int
  /// ProcessStepStatus has a hybrid id, so we mimic it here with a string: "processStepId-personId"
  /// personIdBeingOnboarded is the personId being worked on
  processStepIdPersonId  String
  statusDone             Boolean?
  statusToDo             Boolean?
}
